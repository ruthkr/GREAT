% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/register.R
\name{register}
\alias{register}
\title{Register or synchronize different expression profiles}
\usage{
register(
  input,
  stretches = NA,
  shifts = NA,
  reference,
  query,
  scaling_method = c("none", "z-score", "min-max"),
  overlapping_percent = 50,
  use_optimisation = TRUE,
  optimisation_method = c("lbfgsb", "nm", "sa"),
  optimisation_config = NULL,
  exp_sd = NA,
  num_cores = NA
)
}
\arguments{
\item{input}{Input data frame containing all replicates of gene expression in each genotype at each time point.}

\item{stretches}{Candidate registration stretch factors to apply to query data, only required if \code{use_optimisation = FALSE}.}

\item{shifts}{Candidate registration shift values to apply to query data, only required if \code{use_optimisation = FALSE}.}

\item{reference}{Accession name of reference data.}

\item{query}{Accession name of query data.}

\item{scaling_method}{Scaling method applied to data prior to registration process. Either \code{none} (default), \code{z-score}, or \code{min-max}.}

\item{overlapping_percent}{Minimum percentage of overlapping time point range of the reference data. Shifts will be only considered if it leaves at least this percentage of overlapping time point range after applying the registration.}

\item{use_optimisation}{Whether to optimise registration parameters. By default, \code{TRUE}.}

\item{optimisation_method}{Optimisation method to use. Either \code{"lbfgsb"} for L-BFGS-B (default), \code{"nm"} for Nelder-Mead, or \code{"sa"} for Simulated Annealing.}

\item{optimisation_config}{Optional list with arguments to override the default optimisation configuration.}

\item{exp_sd}{Optional experimental standard deviation on the expression replicates.}

\item{num_cores}{Number of cores to use if the user wants to register genes asynchronously (in parallel) in the background on the same machine. By default, \code{NA}, the registration will be run without parallelisation.}
}
\value{
This function returns a \code{res_greatR} object containing:

\item{data}{a table containing the scaled input data and an additional \code{timepoint_reg} column after applying registration parameters to the query data.}
\item{model_comparison}{a table comparing the optimal registration function for each gene (based on \code{all_shifts_df} scores) to model with no registration applied.}
\item{fun_args}{a list of arguments used when calling the function.}
}
\description{
\code{register()} is a function to register expression profiles a user
wishes to compare.
}
\examples{
\dontrun{
# Load a data frame from the sample data
data_path <- system.file("extdata/brapa_arabidopsis_data.csv", package = "greatR")
all_data <- utils::read.csv(data_path)

# Running the registration
registration_results <- register(
  input = all_data,
  reference = "Ro18",
  query = "Col0"
)
}
}
